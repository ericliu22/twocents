services:
  database:
    image: postgres:alpine
    env_file:
      #Requires POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB
      - database.env
    restart: unless-stopped
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/initdb/:/docker-entrypoint-initdb.d:ro
  server:
    build: ./
    env_file:
      #Requires DATABASE_URL
      - api.env
    ports:
      - "8080:8080"
    depends_on:
      - database
    restart: unless-stopped
  reverse-proxy:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Mount your Nginx configuration
      - ./reverseproxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./reverseproxy/conf.d/:/etc/nginx/conf.d/:ro
      
      # Mount Certbot data to read certificates
      - ./data/certbot/etc:/etc/letsencrypt
      - ./data/certbot/var:/var/lib/letsencrypt

    depends_on:
      - certbot

  certbot:
    image: certbot/certbot:latest
    restart: unless-stopped
    volumes:
      - ./data/certbot/etc:/etc/letsencrypt
      - ./data/certbot/var:/var/lib/letsencrypt
    entrypoint: /bin/sh
    command: >
      -c "trap exit TERM; 
          while :; do 
            certbot renew --webroot -w /var/lib/letsencrypt/ --quiet; 
            sleep 12h; 
          done"
